
### DO NOT EDIT THIS FILE
### This file is auto-generated by the Dyad command-line compiler.
### If you edit this code it is likely to get overwritten.
### Instead, update the Dyad source code and regenerate this file

using ModelingToolkit
import Markdown
using ModelingToolkit: t_nounits as t
using OrdinaryDiffEqDefault
using RuntimeGeneratedFunctions
RuntimeGeneratedFunctions.init(@__MODULE__)

D = Differential(t)

import DyadInterface
@doc Markdown.doc"""
This connector represents an electrical pin with voltage and current as the potential and flow variables, respectively.
"""
@connector function __Dyad__Pin(; name)
  vars = @variables begin
    v(t), []
    i(t), [connect = Flow]
  end
  return System(Equation[], t, vars, []; name)
end
@doc Markdown.doc"""
This connector represents a thermal node with temperature and heat flow as the potential and flow variables, respectively.
"""
@connector function __Dyad__Node(; name)
  vars = @variables begin
    T(t), []
    Q(t), [connect = Flow]
  end
  return System(Equation[], t, vars, []; name)
end
@doc Markdown.doc"""
This connector represents a mechanical flange with position and force as the potential and flow variables, respectively.
"""
@connector function __Dyad__Flange(; name)
  vars = @variables begin
    s(t), []
    f(t), [connect = Flow]
  end
  return System(Equation[], t, vars, []; name)
end
@doc Markdown.doc"""
This connector represents a rotational spline with angle and torque as the potential and flow variables, respectively.
"""
@connector function __Dyad__Spline(; name)
  vars = @variables begin
    phi(t), []
    tau(t), [connect = Flow]
  end
  return System(Equation[], t, vars, []; name)
end

include("Add_definition.jl")
include("Add3_definition.jl")
include("BooleanPassThrough_definition.jl")
include("DeMultiplex_definition.jl")
include("DeMultiplex2_definition.jl")
include("DeMultiplex3_definition.jl")
include("DeMultiplex4_definition.jl")
include("DeMultiplex5_definition.jl")
include("DeMultiplex6_definition.jl")
include("Division_definition.jl")
include("Exponentiation_definition.jl")
include("Feedback_definition.jl")
include("From_deg_definition.jl")
include("From_degC_definition.jl")
include("From_degF_definition.jl")
include("From_degRk_definition.jl")
include("Gain_definition.jl")
include("IntegerPassThrough_definition.jl")
include("IntegerToBoolean_definition.jl")
include("IntegerToReal_definition.jl")
include("InverseBlockConstraints_definition.jl")
include("LinearDependency_definition.jl")
include("Max_definition.jl")
include("Min_definition.jl")
include("MinMax_definition.jl")
include("MultiProduct_definition.jl")
include("MultiSum_definition.jl")
include("Multiplex_definition.jl")
include("Multiplex3_definition.jl")
include("Multiplex4_definition.jl")
include("Multiplex5_definition.jl")
include("Multiplex6_definition.jl")
include("Not_definition.jl")
include("Product_definition.jl")
include("RealPassThrough_definition.jl")
include("RealToBoolean_definition.jl")
include("Sqrt_definition.jl")
include("StandardDeviation_definition.jl")
include("Sum_definition.jl")
include("To_deg_definition.jl")
include("To_degC_definition.jl")
include("To_degF_definition.jl")
include("To_degRk_definition.jl")