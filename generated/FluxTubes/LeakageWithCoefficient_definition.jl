### DO NOT EDIT THIS FILE
### This file is auto-generated by the Dyad command-line compiler.
### If you edit this code it is likely to get overwritten.
### Instead, update the Dyad source code and regenerate this file


@doc Markdown.doc"""
   LeakageWithCoefficient(; name, c_usefulFlux)

Leakage reluctance with respect to the reluctance of a useful flux path (not for dynamic simulation of actuators)
This component is translated by DyadAI

## Parameters: 

| Name         | Description                         | Units  |   Default value |
| ------------ | ----------------------------------- | ------ | --------------- |
| `c_usefulFlux`         | Ratio useful flux/(leakage flux + useful flux) = useful flux/total flux                         | 1  |   0.7 |

## Connectors

 * `port_p` - ([`MagneticPort`](@ref))
 * `port_n` - ([`MagneticPort`](@ref))
 * `R_mUsefulTot` - This connector represents a real signal as an input to a component ([`RealInput`](@ref))

## Variables

| Name         | Description                         | Units  | 
| ------------ | ----------------------------------- | ------ | 
| `V_m`         | Magnetic potential difference of ports                         | A  | 
| `Phi`         | Magnetic flux from port_p to port_n                         | Wb  | 
| `R_m`         | Magnetic reluctance                         | H-1  | 
| `G_m`         | Magnetic permeance                         | H  | 
"""
@component function LeakageWithCoefficient(; name, c_usefulFlux=0.7)

  ### Symbolic Parameters
  __params = Any[]
  append!(__params, @parameters (c_usefulFlux::Real = c_usefulFlux), [description = "Ratio useful flux/(leakage flux + useful flux) = useful flux/total flux"])

  ### Variables
  __vars = Any[]
  append!(__vars, @variables (R_mUsefulTot(t)::Real), [input = true])
  append!(__vars, @variables (V_m(t)::Real), [description = "Magnetic potential difference of ports"])
  append!(__vars, @variables (Phi(t)::Real), [description = "Magnetic flux from port_p to port_n"])
  append!(__vars, @variables (R_m(t)::Real), [description = "Magnetic reluctance"])
  append!(__vars, @variables (G_m(t)::Real), [description = "Magnetic permeance"])

  ### Constants
  __constants = Any[]

  ### Components
  __systems = System[]
  push!(__systems, @named port_p = TranslatedComponents.FluxTubes.MagneticPort())
  push!(__systems, @named port_n = TranslatedComponents.FluxTubes.MagneticPort())

  ### Guesses
  __guesses = Dict()

  ### Defaults
  __defaults = Dict()

  ### Initialization Equations
  __initialization_eqs = []

  ### Equations
  __eqs = Equation[]
  push!(__eqs, V_m ~ port_p.V_m - port_n.V_m)
  push!(__eqs, Phi ~ port_p.Phi)
  push!(__eqs, 0 ~ port_p.Phi + port_n.Phi)
  push!(__eqs, V_m ~ Phi * R_m)
  push!(__eqs, R_m ~ 1 / G_m)
  push!(__eqs, (1 - c_usefulFlux) * R_m ~ c_usefulFlux * R_mUsefulTot)

  # Return completely constructed System
  return System(__eqs, t, __vars, __params; systems=__systems, defaults=__defaults, guesses=__guesses, name, initialization_eqs=__initialization_eqs)
end
export LeakageWithCoefficient

Base.show(io::IO, a::MIME"image/svg+xml", t::typeof(LeakageWithCoefficient)) = print(io,
  """<div style="height: 100%; width: 100%; background-color: white"><div style="margin: auto; height: 500px; width: 500px; padding: 200px"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 1000 1000"
    overflow="visible" shape-rendering="geometricPrecision" text-rendering="geometricPrecision">
      <defs>
        <filter id='red-shadow' color-interpolation-filters="sRGB"><feDropShadow dx="0" dy="0" stdDeviation="100" flood-color="#ff0000" flood-opacity="0.5"/></filter>
        <filter id='green-shadow' color-interpolation-filters="sRGB"><feDropShadow dx="0" dy="0" stdDeviation="100" flood-color="#00ff00" flood-opacity="0.5"/></filter>
        <filter id='blue-shadow' color-interpolation-filters="sRGB"><feDropShadow dx="0" dy="0" stdDeviation="100" flood-color="#0000ff" flood-opacity="0.5"/></filter>
        <filter id='drop-shadow' color-interpolation-filters="sRGB"><feDropShadow dx="0" dy="0" stdDeviation="40" flood-opacity="0.5"/></filter>
      </defs>
    
      </svg></div></div>""")
