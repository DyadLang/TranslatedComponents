component Potentiometer
  extends ConditionalHeatPort(T = T_ref)
  pin_p = Pin()
  contact = Pin()
  pin_n = Pin()
  r = RealInput() if useRinput
  rConst = BlockComponents.Constant(k = rConstant) if not(useRinput)
  rInt = RealInput()
  # Resistance at temperature T_ref
  parameter R::Dyad.Resistance = 1
  # Reference temperature
  parameter T_ref::Dyad.Temperature = 293.15
  # Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref))
  parameter alpha::Dyad.LinearTemperatureCoefficient = 0
  # Use input for 0<r<1 (else constant)
  parameter useRinput::Boolean = false
  # Contact between n (r=0) and p (r=1)
  parameter rConstant::Real(final max = 1, final min = 0) = 0.5
  # Actual resistance between pin_p and contact
  variable Rp::Dyad.Resistance
  # Actual resistance between contact and pin_n
  variable Rn::Dyad.Resistance
relations
  connect(rInt, r)
  connect(rInt, rConst.y)
  pin_p.i + pin_n.i + contact.i = 0
  Rp = R * (1 + alpha * (T_heatPort - T_ref)) * (1 - min(1, max(0, rInt)))
  Rn = R * (1 + alpha * (T_heatPort - T_ref)) * min(1, max(0, rInt))
  pin_p.v - contact.v = Rp * pin_p.i
  pin_n.v - contact.v = Rn * pin_n.i
  LossPower = (pin_p.v - contact.v) * pin_p.i + (pin_n.v - contact.v) * pin_n.i
end