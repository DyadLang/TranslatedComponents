{
  "rem": "rem",
  "linspace": "range",
  "asin": "asin",
  "noEvent": "noEvent",
  "mean": "Statistics.mean",
  "integer": "(Int âˆ˜ floor)",
  "delay": "missing",
  "Integer": "missing",
  "floor": "floor",
  "identity": "LinearAlgebra.I",
  "product": "prod",
  "atan": "atan",
  "sum": "sum",
  "sqrt": "sqrt",
  "der": "der",
  "mod": "mod",
  "actualStream": "missing",
  "sample": "sample",
  "fill": "fill",
  "var": "Statistics.var",
  "exp": "exp",
  "max": "max",
  "Modelica.Units.Conversions.from_degC": "HeatTransfer.from_degC",
  "change": "change",
  "logspace": "missing",
  "log": "log",
  "sort": "sort",
  "acos": "acos",
  "tanh": "tanh",
  "terminal": "terminal",
  "cross": "LinearAlgebra.cross",
  "skew": "missing",
  "pre": "missing",
  "symmetric": "missing",
  "Modelica.Units.Conversions.to_deg": "HeatTransfer.to_deg",
  "sinh": "sinh",
  "ceil": "ceil",
  "reinit": "reinit",
  "semiLinear": "missing",
  "dot": "LinearAlgebra.dot",
  "Modelica.Units.Conversions.from_degF": "HeatTransfer.from_degF",
  "vector": "vcat",
  "smooth": "missing",
  "log10": "log10",
  "scalar": "first",
  "abs": "abs",
  "std": "Statistics.std",
  "cosh": "cosh",
  "diag": "LinearAlgebra.diagm",
  "outerProduct": "missing",
  "div": "div",
  "Modelica.Units.Conversions.to_degC": "HeatTransfer.to_degC",
  "zeros": "zeros",
  "getInstanceName": "$(instance)",
  "sign": "sign",
  "cos": "cos",
  "ndims": "ndims",
  "transpose": "transpose",
  "String": "string",
  "tan": "tan",
  "Modelica.Units.Conversions.from_degRk": "HeatTransfer.from_degRk",
  "Modelica.Units.Conversions.to_degF": "HeatTransfer.to_degF",
  "edge": "edge",
  "min": "min",
  "Modelica.Units.Conversions.from_deg": "HeatTransfer.from_deg",
  "spatialDistribution": "missing",
  "inStream": "missing",
  "initial": "missing",
  "atan2": "atan2",
  "size": "size",
  "ones": "ones",
  "matrix": "missing",
  "EnumTypeName": "missing",
  "Modelica.Units.Conversions.to_degRk": "HeatTransfer.to_degRk",
  "sin": "sin",
  "homotopy": "missing",
  "Modelica.ComplexMath.exp": "exp",
  "Complex": "complex"
}